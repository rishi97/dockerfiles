# Stage 0 - based on Node.js, build and compile the frontend
ARG NODE_VERSION=16.14-alpine
FROM node:${NODE_VERSION} as build-deps

WORKDIR /app

# inatall packages & cache
COPY package.json  /app/
RUN npm install

COPY ./ /app/
RUN npm run build

# Stage 1 - based on Nginx, with only the compiled app, production ready image with Nginx
FROM nginx:1.22-alpine
RUN apk update && apk add bash --no-cache

COPY --from=build-deps /app/build /usr/share/nginx/html

COPY ./nginx.conf /etc/nginx/conf.d/default.conf
COPY ./run.sh /
RUN chmod +x /run.sh
RUN echo "stream {" >> /etc/nginx/nginx.conf && \
    echo "    include /etc/nginx/tcp_conf.d/*.conf;" >> /etc/nginx/nginx.conf && \
    echo "}" >> /etc/nginx/nginx.conf

EXPOSE 80

ENTRYPOINT [ "run.sh" ]
